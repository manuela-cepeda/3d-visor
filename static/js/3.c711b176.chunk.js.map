{"version":3,"sources":["components/views/proyectpage/workspace/LeftPanel/ViewerElementDropdown.js","components/views/proyectpage/workspace/LeftPanel/ViewerCategoryDropdown.js","components/views/proyectpage/workspace/LeftPanel/ElementNode.js","components/views/proyectpage/workspace/LeftPanel/CategoryNode.js","components/views/proyectpage/workspace/LeftPanel/TreeElements.js"],"names":["ViewerElementDropdown","elementID","useContext","ViewerContext","isolate","selectFromList","addToTable","CommentOnElement","React","useState","dropdownPopoverShow","setDropdownPopoverShow","btnDropdownRef","createRef","popoverDropdownRef","handleAddToList","e","a","preventDefault","className","href","ref","onClick","createPopper","current","placement","ViewerCategoryDropdown","categoryType","setCategorySelected","isolateCategory","selectAllByCategory","addCategoryToTable","unselectAll","ElementNode","node","categoryName","hide","selectedID","isShown","setIsShown","isSelected","expressID","nodeRef","useRef","scrollIntoView","block","behavior","onMouseEnter","onMouseLeave","id","name","target","classList","contains","parseInt","parentNode","remove","add","memo","CategoryNode","hideCategory","encontrado","element","some","item","childVisible","setChildVisiblity","useEffect","v","type","cant","map","i","CardTreeElements","data","types","getCategories","child","forEach","find","findIndex","push","ObjectType","value","children","tree","property","filtroTree"],"mappings":"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","file":"static/js/3.c711b176.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { ViewerContext } from \"context/ViewerContext\";\n\nconst ViewerElementDropdown = ({elementID }) => {\n\n  const { isolate, selectFromList, addToTable, CommentOnElement}=useContext(ViewerContext);\n\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n  const btnDropdownRef = React.createRef();\n  const popoverDropdownRef = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n\n  //handle opcions\n  const handleIsolate = (e) => { \n    e.preventDefault() \n\t\tisolate(elementID);     \n\t}\n\n\tconst handleComment = (e) => {  \n    e.preventDefault()  \n    CommentOnElement()\n\t}\n    \n\tconst handleAddToList =  async (e) => {  \n    e.preventDefault() \t\t \n\t\taddToTable()\t\n\t }\n  \n\n\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500  hover:text-orange-500  focus:text-orange-500   px-3\"\n        href=\"#pablo\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n          selectFromList(e)\n        }}\n      >\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </a>\n      <div\n        ref={popoverDropdownRef}\n        className={\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n        }\n      >\n        <a\n          href=\"#viewer\"\n          className={\n            \"hover:bg-gray-200 text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={handleAddToList}\n        >\n          Add to List \n        </a>\n        <a\n          href=\"#viewer\"\n          className={\n            \"hover:bg-gray-200  text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={handleComment}\n        >\n      Add comment\n        </a>\n        <a\n          href=\"#viewer\"\n          className={\n            \"hover:bg-gray-200  text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={handleIsolate}\n        >\n       Isolate element\n        </a>\n      \n      </div>\n    </>\n  );\n};\n\nexport default ViewerElementDropdown;\n","import React, { useContext } from \"react\";\nimport { createPopper } from \"@popperjs/core\";\nimport { ViewerContext } from \"context/ViewerContext\";\n\nconst ViewerCategoryDropdown = ({categoryType}) => {\n\n  const {setCategorySelected, isolateCategory, selectAllByCategory, addCategoryToTable, unselectAll}=useContext(ViewerContext);\n\n  // dropdown props\n  const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n  const btnDropdownRef = React.createRef();\n  const popoverDropdownRef = React.createRef();\n  const openDropdownPopover = () => {\n    createPopper(btnDropdownRef.current, popoverDropdownRef.current, {\n      placement: \"left-start\",\n    });\n    setDropdownPopoverShow(true);\n  };\n  const closeDropdownPopover = () => {\n    setDropdownPopoverShow(false);\n  };\n\n  //handle opcions\n  const handleIsolate = (e) => { \n    e.preventDefault() \n\t\tisolateCategory(categoryType); \n    unselectAll()    \n\t}\n\n    \n\tconst handleAddToList =  async (e) => {  \n    e.preventDefault()    \n\t\taddCategoryToTable(categoryType)\t\n\t }\n   \n\n\n\n  return (\n    <>\n      <a\n        className=\"text-blueGray-500  hover:text-orange-500  focus:text-orange-500   px-3\"\n        href=\"#\"\n        ref={btnDropdownRef}\n        onClick={(e) => {\n          e.preventDefault();\n          dropdownPopoverShow ? closeDropdownPopover() : openDropdownPopover();\n          setCategorySelected(categoryType)\n          selectAllByCategory(categoryType)\n        }}\n      >\n        <i className=\"fas fa-ellipsis-v\"></i>\n      </a>\n      <div\n        ref={popoverDropdownRef}\n        className={\n          (dropdownPopoverShow ? \"block \" : \"hidden \") +\n          \"bg-white text-base z-50 float-left py-2 list-none text-left rounded shadow-lg min-w-48\"\n        }\n      >\n        <a\n          href=\"\"\n          className={\n            \"hover:bg-gray-200 text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={handleAddToList}\n        >\n          Add to List \n        </a>      \n        <a\n          href=\"\"\n          className={\n            \"hover:bg-gray-200  text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent text-blueGray-700\"\n          }\n          onClick={handleIsolate}\n        >\n       Isolate category\n        </a>\n      \n      </div>\n    </>\n  );\n};\n\nexport default ViewerCategoryDropdown;\n","\r\nimport ViewerElementDropdown from './ViewerElementDropdown';\r\nimport { ViewerContext } from 'context/ViewerContext';\r\nimport React, { memo, useContext, useRef, useState } from 'react'\r\n\r\nconst ElementNode = ({ node, categoryName}) => {\t\r\n\r\n\tconst { hide, selectedID }=useContext(ViewerContext);\r\n\tconst [isShown, setIsShown] = useState(false);\r\n\r\n\t//si se selecciona 1 elemento en el modelo se muestra en la lista de elementos\r\n\tconst isSelected =  node.expressID === selectedID ?  true : false; \r\n\tconst nodeRef =  useRef()  \t\r\n\tif(isSelected === 1  && nodeRef.current){  \r\n    nodeRef.current.scrollIntoView({ block: \"center\", behavior: 'smooth' })\t\r\n\r\n   }\r\n\r\n\tconst handleHide = (e) => { \r\n\t\t\tif(e.target.classList.contains('fas')){              \r\n\t\t\t\thide(parseInt(e.target.parentNode.parentNode.id), 'hide') ;        \r\n\t\t\t\te.target.classList.remove('fas')\r\n\t\t\t\te.target.classList.add('far')\r\n\t\t\t}else if(e.target.classList.contains('far')){         \r\n\t\t\t\thide(parseInt(e.target.parentNode.parentNode.id), 'show') ; \r\n\t\t\t\te.target.classList.remove('far')\r\n\t\t\t\te.target.classList.add('fas')\r\n\t\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n  return (\r\n    <li \r\n\tkey={node.expressID}\r\n\tonMouseEnter={() => setIsShown(true)}\r\n\tonMouseLeave={() => setIsShown(false)}\r\n\t ref={nodeRef}  id={node.expressID} className={`flex justify-between mb-1  ${ isSelected  ? \"bg-orange-100\" : \"\"  }`}>            \r\n        {node.name}\t\t\r\n    <div className='flex items-center'>\t\r\n\t\t{isShown && <ViewerElementDropdown  elementID={node.expressID} />\t}\t\t\t \r\n    \t<i  onClick={handleHide}  className ={` hover:text-orange-500   fas fa-lightbulb pr-2 `} ></i> {/* ${lightbulbOn} */}\r\n    </div>\r\n\r\n  </li>\r\n  )\r\n}\r\n\r\nexport default memo(ElementNode)","\r\n\r\nimport ViewerCategoryDropdown from './ViewerCategoryDropdown';\r\nimport { ViewerContext } from 'context/ViewerContext';\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport ElementNode from './ElementNode';\r\n\r\n\r\n const CategoryNode =   ({ node }) => {\r\n\r\n  const {selectedID , hideCategory}= useContext(ViewerContext);   \r\n   const encontrado = node.element.some(item => item.expressID == selectedID  )\r\n   const [isShown, setIsShown] = useState(false);\r\n   const [childVisible, setChildVisiblity] = useState(false);\r\n\r\n   useEffect(() => {\r\n    if (encontrado) {\r\n      setChildVisiblity(true)      \r\n    } else {\r\n      setChildVisiblity(false)\r\n      }\r\n   }, [selectedID]);\r\n    \r\n   const handleHide = (e) => {  \r\n     if(e.target.classList.contains('fas')){\r\n        hideCategory(node.type, 'hide')\r\n        e.target.classList.remove('fas')\r\n        e.target.classList.add('far')\r\n     }else if(e.target.classList.contains('far')){     \r\n       hideCategory(node.type, 'show')  \r\n       e.target.classList.remove('far')\r\n       e.target.classList.add('fas')\r\n     }\r\n    }\r\n\r\n\r\n    return (\r\n      <>      \r\n        <div \r\n          className='flex justify-between mb-2' \r\n          onMouseEnter={() => setIsShown(true)}\r\n          onMouseLeave={() => setIsShown(false)}\r\n        >\r\n          <div onClick={() => setChildVisiblity((v) => !v)}>  \r\n            <i  className={`pr-1 fas  ${childVisible ? \"fa-angle-down\" : \"fa-angle-right\"}` }  ></i>\r\n            <i className={`pr-1 fas  ${childVisible ? \"fa-folder-open\" : \"fa-folder\"}`}> </i>\r\n            <span className=\"font-semibold\">{node.type} </span>   ({node.cant})\r\n          </div> \r\n         \r\n            <div>              \r\n              {isShown &&  <ViewerCategoryDropdown categoryType={node.type} />}            \r\n              <i  className=\"fas fa-lightbulb pr-2 hover:text-orange-500 \" onClick={handleHide} ></i>\r\n            \r\n            </div>\r\n            {/* )}    */}\r\n        </div>\r\n        <ul className='pl-2 '>         \r\n        {node.element.map( (item, i) =>         \r\n        childVisible && (                      \r\n          <ElementNode  categoryName={node.type} key={i} node={item}  />              \r\n        )                 \r\n        )}\r\n        </ul>\r\n      </>\r\n    );\r\n  };\r\n\r\n\r\nexport default CategoryNode;","import CategoryNode from './CategoryNode';\r\n\r\n const CardTreeElements = ({data = []}) => {  \r\n\r\n  let types = [] \r\n  \r\n  \r\n  data?.forEach((tree) =>{getCategories(tree.children, types)})    \r\n  function getCategories(child, types){        \r\n    child?.forEach(child => {     \r\n      const existe = types.find(item => item.type == child.type);\r\n      if (!existe) { \r\n        types.push({type: child.type, cant: 1, element: [{expressID: child.expressID, name: child.ObjectType?.value}]})\r\n      } else {\r\n        const i = types.findIndex(item => item.type == child.type);\r\n        types[i].cant++;\r\n        types[i].element.push({expressID: child.expressID, name: child.ObjectType?.value});\r\n      }\r\n    });\r\n    child?.forEach(child => getCategories(child?.children, types ));         \r\n  }\r\n \r\n\r\n  /// Filtro de propiedades\r\n  const filtroTree = (property) => {\r\n    const hideTree = ['IFCSITE',  'IFCBUILDING','IFCPROJECT', 'IFCBUILDINGSTOREY', 'IFCSTAIR', 'IFCCURTAINWALL']; //VERRR\r\n    const found = hideTree.find(i => i === property);\r\n    if (!found) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n    <>           \r\n      <div className=\"m-1\">\r\n        <ul className=\"p-1 text-xs text-blueGray-700 select-none cursor-pointer  \">\r\n          { types?.map((item, i) => \r\n            filtroTree(item.type) &&  (\r\n              <li  key={i} id={item.type} >              \r\n                <CategoryNode   node={item}  />\r\n              </li>\r\n            ) \r\n          )}\r\n        </ul>\r\n    </div>     \r\n        \r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default CardTreeElements;\r\n\r\n\r\n\r\n  "],"sourceRoot":""}